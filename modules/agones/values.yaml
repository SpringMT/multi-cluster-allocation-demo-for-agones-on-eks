# https://github.com/googleforgames/agones/blob/v1.21.0/install/helm/agones/values.yaml
agones:
  metrics:
    prometheusEnabled: true
    prometheusServiceDiscovery: true
  controller:
    logLevel: warn
    resources:
      requests:
        cpu: 400m
        memory: 256Mi
    nodeSelector:
      "agones.dev/agones-system": "true"
  # Install this if you need ping service https://agones.dev/site/docs/guides/ping-service/
  ping:
    install: false
  allocator:
    # Currently we have a lot of invalid warnings when logLevel is below warn
    # https://github.com/googleforgames/agones/issues/2498
    logLevel: error
    resources:
      requests:
        cpu: 400m
        memory: 256Mi
    replicas: null
    nodeSelector:
      "agones.dev/agones-system": "true"
    service:
      # https://aws.amazon.com/premiumsupport/knowledge-center/eks-cidr-ip-address-loadbalancer/
      loadBalancerSourceRanges:
%{ for cidr in allocator_allowed_cidrs ~}
        - ${cidr}
%{ endfor ~}

      annotations: 
        # Annotations to deploy NLB instead of CLB
        # https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.4/guide/service/annotations/
        service.beta.kubernetes.io/aws-load-balancer-type: external

        # https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.4/guide/service/nlb/#instance-mode
        service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
        
        # Set this to "internal" if you do not need internet access.
        service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing

        # We need this to use loadBalancerSourceRanges
        service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=true

        service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "30"

      # Enabled this if you need REST api service
      http:
        enabled: true
    # TLS certificates for allocator service will be generated by cert-manager
    # because Helm-generated certs has invalid CN.
    generateTLS: false
    # TLS certificate for allocator service clients will also be generated by cert-manager
    # because otherwise certs are updated every time we update Helm chart.
    generateClientTLS: false

gameservers:
  namespaces:
  - ${gameserver_namespace}
